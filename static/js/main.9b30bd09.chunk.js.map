{"version":3,"sources":["components/Home.js","actions/usersActions.js","components/Register.js","components/Login.js","components/Account.js","components/NoteForm.js","components/Note.js","components/NoteList.js","components/NotesContainer.js","components/NavBar.js","App.js","reducers/usersReducer.js","reducers/userReducer.js","reducers/loggedInReducer.js","reducers/notesReducer.js","store/configureStore.js","index.js"],"names":["Home","props","className","removeNote","id","type","payload","addNote","noteObj","getNotes","notesArr","setAccount","info","setUser","usersInfo","toggleLogin","Register","useState","username","setUsername","email","setEmail","password","setPassword","setFormError","errors","dispatch","useDispatch","handleChange","e","target","name","value","onSubmit","preventDefault","trim","length","empty","swal","validator","isEmail","Object","keys","userData","routeFunc","history","push","axios","post","then","response","result","data","hasOwnProperty","message","catch","err","placeholder","onChange","Login","title","text","icon","localStorage","setItem","token","console","log","Account","user","useSelector","state","useEffect","get","headers","getItem","alert","NoteForm","setTitle","body","setBody","cols","rows","Note","_id","onClick","window","confirm","delete","NoteList","notes","map","note","NotesContainer","WrappedComponent","withRouter","toggleLoginState","loggedIn","to","removeItem","path","component","exact","App","initialUsersValue","usersReducer","action","initialUserValue","userReducer","loggedInReducer","initialNotesValue","notesReducer","filter","ele","configureStore","createStore","combineReducers","users","applyMiddleware","thunk","store","getState","subscribe","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b30bd09.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = (props) => {\n    return (\n        <div className='home_heading'>\n            <h1> User Authentication with Redux  </h1>\n        </div>\n    )\n}\n\nexport default Home","import axios from 'axios'\nimport swal from 'sweetalert'\n\nexport const startSetUser = (userData, routeFunc) => {\n    return (dispatch) => {\n        axios.post('http://dct-user-auth.herokuapp.com/users/register', userData)\n            .then((response) => {\n                const result = response.data\n                if(result.hasOwnProperty('errors')) {\n                    swal(result.message)\n                } else {\n                    dispatch(setUser(result))\n                    routeFunc()\n                    swal('Successfully created an account!', \"\", 'success')\n                }\n            })\n            .catch((err) => {\n                swal(err.message)\n            })\n    }\n    \n}\n\nexport const startSetLogin = (userData, routeFunc) => {\n    return (dispatch) => {\n        axios.post('http://dct-user-auth.herokuapp.com/users/login', userData)\n            .then(response => {\n                const result = response.data\n                if (result.hasOwnProperty('errors')) {\n                    swal({\n                        title : 'Error Detected',\n                        text : result.errors,\n                        icon : 'error'\n                    })\n                } else {\n                    localStorage.setItem('token', result.token)\n                    dispatch(toggleLogin())\n                    routeFunc()\n                    swal('Successfully logged in!','', 'success')\n                }\n            })\n            .catch(err => {\n                console.log(err.message)\n            })\n    }\n}\n\nexport const startAddNote = (noteObj) => {\n    console.log('hello')\n    return (dispatch) => {\n        axios.post('http://dct-user-auth.herokuapp.com/api/notes', noteObj, {\n            headers : {\n                'x-auth' : localStorage.getItem('token')\n            }\n        })\n        .then(response => {\n            const result = response.data\n            dispatch(addNote(result))\n        })\n        .catch(err => {\n            alert(err.message)\n        })\n    }\n}\n\nexport const startAccount = () => {\n    return (dispatch) => {\n        axios.get('http://dct-user-auth.herokuapp.com/users/account', {\n            headers: {\n                'x-auth' : localStorage.getItem('token')\n            }\n        })\n        .then((response) => {\n            const result = response.data\n            console.log(result)\n            dispatch(setAccount(result))\n        })\n        .catch((err) => {\n            alert(err.message)\n        })\n    }\n}\n\nexport const startGetNotes = () => {\n    return (dispatch) => {\n        axios.get('http://dct-user-auth.herokuapp.com/api/notes', {\n            headers : {\n                'x-auth' : localStorage.getItem('token')\n            }\n        })\n        .then(response => {\n            const result = response.data\n            dispatch(getNotes(result))\n        })\n    }\n}\n\nexport const startRemoveNote = (id) => {\n    return (dispatch) => {\n        const confirmRemove = window.confirm('Are you sure?')\n        if(confirmRemove) {\n            axios.delete(`http://dct-user-auth.herokuapp.com/api/notes/${id}`, {\n                headers : {\n                    'x-auth' : localStorage.getItem('token')\n                }\n            })\n            .then(response => {\n                const result = response.data\n                dispatch(removeNote(result._id))\n            })\n            .catch(err => {\n                alert(err.message)\n            })\n        }\n    }\n}\n\nexport const removeNote = (id) => {\n    return {\n        type: 'REMOVE_NOTE',\n        payload: id\n    }\n}\n\nexport const addNote = (noteObj) => {\n    return {\n        type : 'ADD_NOTE',\n        payload: noteObj\n    }\n}\n\nexport const getNotes = (notesArr) => {\n    return {\n        type : 'GET_NOTES',\n        payload: notesArr\n    }\n}\n\nexport const setAccount = (info) => {\n    return {\n        type: 'ADD_INFO',\n        payload: info\n    }\n}\n\nexport const removeToken = () => {\n    return {\n        type: 'REMOVE_TOKEN'\n    }\n}\n\nexport const setUser = (usersInfo) => {\n    return {\n        type: 'SET_USER',\n        payload: usersInfo\n    }\n}\n\nexport const toggleLogin = () => {\n    return {\n        type : 'TOGGLE_LOGIN'\n    }\n}","import React, {useState} from 'react'\nimport swal from 'sweetalert'\nimport {useDispatch} from 'react-redux'\nimport validator from 'validator'\nimport {startSetUser} from '../actions/usersActions'\n\nconst Register = (props) => {\n\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [formError, setFormError] = useState({})\n    const errors = {}\n\n    const dispatch = useDispatch()\n\n    const handleChange = (e) => {\n        if (e.target.name === 'username') {\n            setUsername(e.target.value)\n        } else if (e.target.name === 'email') {\n            setEmail(e.target.value)\n        } else if (e.target.name === 'password') {\n            setPassword(e.target.value)\n        }\n    }\n\n    const validations = () => {\n        if(username.trim().length === 0 || email.trim().length === 0 ) {\n            errors.empty = 'Field cannot be left blank'\n            swal('Check empty fields', '', 'error')\n        }\n        else if (!validator.isEmail(email)) {\n            errors.email = 'Invalid E-Mail format'\n            swal('Invalid E-Mail format', '', 'error')\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        validations()\n\n        if(Object.keys(errors).length === 0) {\n            setFormError({})\n\n            const formData = {\n                username: username,\n                email: email,\n                password: password\n            }\n\n            const reRoute = () => {\n                props.history.push('/login')\n            }\n\n            dispatch(startSetUser(formData, reRoute))\n            \n            setUsername('')\n            setPassword('')\n            setEmail('')\n            //setToggleRegister(false)\n        } else {\n            setFormError(errors)\n            if(username.trim().length === 0 || email.trim().length === 0 ) {\n                swal('Check empty fields', '', 'error')\n            }\n            else if (!validator.isEmail(email)) {\n                swal('Invalid E-Mail format', '', 'error')\n            }\n        }\n    }\n\n    \n\n    return (\n        <div className='register_div'>\n            <h2> Register with us </h2>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    placeholder='enter username'\n                    value={username}\n                    onChange={handleChange}\n                    name='username'\n                />  <br/> <br/>\n                \n                <input \n                    type=\"text\"\n                    placeholder='enter email'\n                    value={email}\n                    onChange={handleChange}\n                    name='email'\n                /> <br/> <br/>\n    \n                <input \n                    type=\"password\"\n                    placeholder='enter password'\n                    value={password}\n                    onChange={handleChange}\n                    name='password'\n                /> <br/> <br/>\n\n                <input type='submit' />\n\n            </form>\n        </div>\n    )\n}\n\nexport default Register\n","import React, {useState} from 'react'\nimport { useDispatch} from 'react-redux'\nimport {startSetLogin} from '../actions/usersActions'\n\nconst Login = (props) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const formData = {\n            email: email,\n            password: password\n        }\n\n        const reRoute = () => {\n            props.history.push('/')\n        }\n\n        dispatch(startSetLogin(formData, reRoute))\n\n    }\n\n    const handleChange = (e) => {\n        if (e.target.name === 'email') {\n            setEmail(e.target.value)\n        } else if (e.target.name === 'password') {\n            setPassword(e.target.value)\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input                  \n                    type=\"text\"\n                    placeholder='Enter E-Mail'\n                    value={email}\n                    onChange={handleChange}\n                    name='email'\n                /> <br/> <br/>\n\n                <input \n                    type=\"password\"\n                    placeholder='Enter Password'\n                    value={password}\n                    onChange={handleChange}\n                    name='password' \n                /> <br/> <br/>\n\n                <input type='submit' />\n        \n            </form>\n        </div>\n    )\n}\n\nexport default Login\n","import React,{useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startAccount } from '../actions/usersActions'\n\nconst Account = (props) => {\n\n    const dispatch = useDispatch()\n\n    const user = useSelector((state) => {\n        return state.user\n    })\n\n    useEffect(() => {\n        dispatch(startAccount())\n    },[])\n\n    return (\n        <div>\n            <h2> User Account </h2>\n            <p> E-Mail : {user.email}  </p>\n            <p> Username : {user.username} </p>\n        </div>\n    )\n}\n\nexport default Account\n","import React, {useState} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { startAddNote } from '../actions/usersActions'\n\nconst NoteForm = (props) => {\n\n    const dispatch = useDispatch()\n\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n\n    const handleChange = (e) => {\n        if (e.target.name === 'title') {\n            setTitle(e.target.value)\n        } else if (e.target.name === 'body') {\n            setBody(e.target.value)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const formData = {\n            title: title,\n            body: body\n        }\n\n        dispatch(startAddNote(formData))\n\n        setTitle('')\n        setBody('')\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} >\n                <h3> Add Note </h3>\n                <input \n                    type=\"text\" \n                    placeholder='Enter Note Title'\n                    value={title}\n                    name='title'\n                    onChange={handleChange}\n                /> <br/> <br/>\n                <textarea \n                    name=\"body\"\n                    value={body}\n                    onChange={handleChange}\n                    placeholder='Enter note here... '\n                    cols=\"20\" \n                    rows=\"10\"\n                > </textarea> <br/> <br/>\n                <input \n                    type=\"submit\"\n                    value='Save'\n                />\n            </form>\n        </div>\n    )\n}\n\nexport default NoteForm","import React from 'react'\nimport swal from 'sweetalert'\nimport { useDispatch } from 'react-redux'\nimport { startRemoveNote } from '../actions/usersActions'\n\nconst Note = (props) => {\n\n    const {_id, title, body} = props\n\n    const dispatch = useDispatch()\n    \n    const handleAlert = () => {\n        swal({\n            title: title,\n            text: body,\n            icon: 'info'\n        })\n    }\n\n    const handleDelete = () => {\n        dispatch(startRemoveNote(_id))\n    }\n\n    return (\n        <div>\n            <h4 onClick={handleAlert} > {title} </h4>\n            <button onClick={handleDelete} > Delete </button>\n        </div>\n    )\n}\n\nexport default Note\n","import React, {useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startGetNotes } from '../actions/usersActions'\nimport Note from './Note'\n\nconst NoteList = (props) => {\n\n    const dispatch = useDispatch()\n\n    const notes = useSelector(state => {\n        return state.notes\n    })\n\n    useEffect(() => {\n        dispatch(startGetNotes())\n    }, [])\n\n    return (\n        <div>\n            <ul>\n                {\n                    notes.map(note => {\n                        return <li key={note._id}> <Note {...note} /> </li> \n                    })\n                }\n            </ul>\n            \n        </div>\n    )\n}\n\nexport default NoteList","import React from 'react'\nimport NoteForm from './NoteForm'\nimport NoteList from './NoteList'\n\nconst NotesContainer = (props) => {\n\n    return (\n        <div>\n            <NoteForm />\n            <NoteList />\n        </div>\n    )\n}\n\nexport default NotesContainer\n","import React from 'react'\nimport swal from 'sweetalert'\nimport {Link, Route, withRouter} from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Home from './Home'\nimport Register from './Register'\nimport Login from './Login'\nimport Account from './Account'\nimport NotesContainer from './NotesContainer'\nimport { removeToken, toggleLogin } from '../actions/usersActions'\n\nconst NavBar = (props) => {\n\n    const dispatch = useDispatch()\n\n    const toggleLoginState = useSelector((state) => {\n        return state.loggedIn\n    })\n\n    return (\n        <div className='container-fluid'>\n            <div className=\"topnav\">\n\n                <Link to='/' > Home </Link>\n\n                {\n                    toggleLoginState ? (\n                        <>\n                            <Link to='/account' > Account </Link> \n                            <Link to='/mynotes' > My Notes </Link>\n                            <Link to='/' onClick={\n                                () => {\n                                    dispatch(removeToken())\n                                    dispatch(toggleLogin())\n                                    localStorage.removeItem('token')\n                                    swal('Successfully logged out!', '', 'success')\n                                    props.history.push('/')\n                                }\n                            } > Logout </Link>\n                        </>\n                    ) : (\n                        <> \n                            <Link to='/register' > Register </Link>\n                            <Link to='/login' > Login </Link>\n                        </>\n                    )\n                }\n            </div>\n\n                <Route path='/' component={Home} exact={true} />\n                <Route path='/register' component={Register} />\n                <Route path='/login' component={Login} />\n                <Route path='/account' component={Account} />\n                <Route path='/mynotes' component={NotesContainer} />\n            \n        </div>\n    )\n}\n\nconst WrappedComponent = withRouter(NavBar)\n\nexport default WrappedComponent","import React from 'react'\nimport NavBar from './components/NavBar'\n\nconst App = (props) => {\n  return (\n    <div>\n      <NavBar />\n    </div>\n  )\n}\n\nexport default App","const initialUsersValue = []\n\nconst usersReducer = (state = initialUsersValue, action) => {\n    switch(action.type) {\n\n        case 'SET_USER' : {\n            return [...state, {...action.payload}]\n        }\n\n        default : {\n            return [...state]\n        }\n    }\n}\n\nexport default usersReducer","const initialUserValue =  {}\n\nconst userReducer = (state = initialUserValue, action) => {\n    switch(action.type) {\n\n        case 'ADD_INFO' : {\n            return  {...action.payload}\n        }\n\n        default : {\n            return {...state}\n        }\n    }\n}\n\nexport default userReducer","const initialLoggedInValue = false\n\nconst loggedInReducer = (state = initialLoggedInValue, action) => {\n    switch(action.type) {\n\n        case 'TOGGLE_LOGIN' : {\n            return !state\n        }\n\n        default : {\n            return state\n        }\n    }\n}\n\nexport default loggedInReducer","const initialNotesValue = []\n\nconst notesReducer = (state = initialNotesValue, action) => {\n    switch(action.type) {\n\n        case 'ADD_NOTE' : {\n            return [...state, {...action.payload}]\n        }\n\n        case 'GET_NOTES' : {\n            return [...action.payload, ...state]\n        }\n\n        case 'REMOVE_NOTE' : {\n            const result = [...state].filter(ele => {\n                return ele._id !== action.payload\n            })\n            return [...result]\n        }\n\n        default : {\n            return [...state]\n        }\n    }\n}\n\nexport default notesReducer","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport usersReducer from '../reducers/usersReducer'\nimport userReducer from '../reducers/userReducer'\nimport loggedInReducer from '../reducers/loggedInReducer'\nimport notesReducer from '../reducers/notesReducer'\n\nconst configureStore = () => {\n    const store = createStore(combineReducers({\n        users: usersReducer,\n        loggedIn: loggedInReducer,\n        user: userReducer,\n        notes: notesReducer\n    }), applyMiddleware(thunk))\n    return store\n}\n\nexport default configureStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport configureStore from './store/configureStore'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nconst store = configureStore()\n\nconsole.log('state', store.getState())\n\nstore.subscribe(() => {\n  console.log('state updated', store.getState())\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}